<?php

/**
 * Implements hook_install().
 *
 * @ingroup ubc_science_shared_config
 */
function ubc_science_shared_config_install() {
  $config = \Drupal::service('config.factory');

  $config->getEditable('editor.editor.filtered_text')
    ->set('settings.plugins.ckeditor5_style.styles', [
      [
        'label' =>  'Text Hug (remove top spacing)',
        'element' =>  '<p class="text-hug">',
      ],
      [
        'label' =>  'Lead Text',
        'element' =>  '<p class="text-lead text-ubc-blue-sea">',
      ],
      [
        'label' =>  'Text: small',
        'element' =>  '<p class="text-sm">',
      ],
      [
        'label' =>  'Serif font',
        'element' =>  '<p class="font-serif">',
      ],
      [
        'label' =>  'Uppercase Text',
        'element' =>  '<span class="text-uppercase">',
      ],
      [
        'label' =>  'Lowercase Text',
        'element' =>  '<span class="text-lowercase">',
      ],
      [
        'label' =>  'Semibold Text',
        'element' =>  '<span class="font-semibold">',
      ],
      [
        'label' =>  'Grey Text',
        'element' =>  '<span class="text-grey-700">',
      ],
      [
        'label' =>  'White Text',
        'element' =>  '<span class="text-white">',
      ],
      [
        'label' =>  'Attribution, Footnote Text',
        'element' =>  '<p class="text-sm text-grey-700 text-uppercase">',
      ],
      [
        'label' =>  'List: inline',
        'element' =>  '<ul class="list-inline">',
      ],
      [
        'label' =>  'List: bordered',
        'element' =>  '<ul class="list-bordered">',
      ],
      [
        'label' =>  'List: checked',
        'element' => '<ul class="list-checked">',
      ],
      [
        'label' =>  'List: buttons',
        'element' => '<ul class="button-list">',
      ],
      [
        'label' =>  'List: 2 across',
        'element' => '<ul class="button-list list-grid--two">',
      ],
      [
        'label' =>  'List: 3 across',
        'element' => '<ul class="button-list list-grid--three">',
      ],
      [
        'label' =>  'List: 4 across',
        'element' => '<ul class="button-list list-grid--four">',
      ],
      [
        'label' =>  'Ordered List: inline',
        'element' => '<ol class="list-inline">',
      ],
      [
        'label' =>  'Ordered List: bordered',
        'element' => '<ol class="list-bordered">',
      ],
      [
        'label' =>  'Ordered List: checked',
        'element' => '<ol class="list-checked">',
      ],
      [
        'label' =>  'Ordered List: buttons',
        'element' => '<ol class="button-list">',
      ],
      [
        'label' =>  'Ordered List: 2 across',
        'element' => '<ol class="button-list list-grid--two">',
      ],
      [
        'label' =>  'Ordered List: 3 across',
        'element' => '<ol class="button-list list-grid--three">',
      ],
      [
        'label' =>  'Ordered List: 4 across',
        'element' => '<ol class="button-list list-grid--four">',
      ],
      [
        'label' =>  'Unit Button',
        'element' => '<a class="unit-button">',
      ],
      [
        'label' =>  'Light Button',
        'element' => '<a class="unit-button unit-button--light">',
      ],
      [
        'label' =>  'Dark Button',
        'element' => '<a class="unit-button unit-button--dark">',
      ],
      [
        'label' =>  'Simple Button',
        'element' => '<a class="unit-button unit-button--simple">',
      ],
      [
        'label' =>  'Bordered Button',
        'element' => '<a class="unit-button unit-button--bordered">',
      ],
      [
        'label' =>  'Subunit Button',
        'element' => '<a class="unit-button unit-button--subunit">',
      ],
      [
        'label' =>  'Transparent Button',
        'element' => '<a class="unit-button unit-button--transparent">',
      ],
      [
        'label' =>  'Capped Button',
        'element' => '<a class="unit-button unit-button--capped">',
      ],
      [
        'label' =>  'Full-width Button',
        'element' => '<a class="unit-button unit-button--block">',
      ],
      [
        'label' =>  'Extra Small Button',
        'element' => '<a class="text-xs unit-button unit-button--text-xs">',
      ],
      [
        'label' =>  'Small Button',
        'element' => '<a class="text-sm unit-button unit-button--text-sm">',
      ],
      [
        'label' =>  'Large Button',
        'element' => '<a class="text-lg unit-button unit-button--text-lg">',
      ],
      [
        'label' =>  'XLarge Button',
        'element' => '<a class="text-xl unit-button unit-button--text-xl">',
      ],
      [
        'label' =>  'XXLarge Button',
        'element' => '<a class="text-2xl unit-button unit-button--text-2xl">',
      ],
    ])
    ->save();
  $config->getEditable('core.entity_form_display.media.image.default')
    ->clear(
      'hidden.name',
      'hidden.replace_file',
    )
    ->set('dependencies.module', [
      'image',
      'path',
    ])
    ->set('content.name', [
      'weight' => '2',
      'type' => 'string_textfield',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [
        'size' => '60',
        'placeholder' => '',
      ],
    ])
    ->set('content.replace_file', [
      'weight' => '3',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [],
    ])
    ->save();
  $config->getEditable('core.entity_form_display.media.private_file.default')
    ->clear(
      'hidden.replace_file',
    )
    ->set('content.replace_file', [
      'weight' => '3',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [],
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.card_group.default')
    ->set('third_party_settings.field_group.group_optional_title.weight', '-1')
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.card_horizontal.default')
    ->set('content.field_paragraph_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->set('content.field_paragraph_card_title.weight', '-1')
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.card_vertical.default')
    ->set('content.field_paragraph_card_title.weight', '-1')
    ->set('content.field_paragraph_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.feature_image.default')
    ->set('dependencies.module', [
      'link',
      'maxlength',
      'svg_image',
    ])
    ->set('content.field_paragraph_feature_title.weight', '-1')
    ->set('content.field_paragraph_feature_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.icon_card.default')
    ->set('dependencies.module', [
      'link',
      'maxlength',
      'media_library',
    ])
    ->set('content.field_paragraph_icon_card_title.weight', '-1')
    ->set('content.field_paragraph_icon_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.image_card.default')
    ->set('dependencies.module', [
      'link',
      'maxlength',
      'media_library',
    ])
    ->set('content.field_paragraph_card_title.weight', '-1')
    ->set('content.field_paragraph_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  // update condtional title view
  $config->getEditable('views.view.content_conditional_title')
    ->set('display.default.display_options.filters.field_landing_masthead_target_id', [
      'id' => 'field_landing_masthead_target_id',
      'table' => 'node__field_landing_masthead',
      'field' => 'field_landing_masthead_target_id',
      'relationship' => 'none',
      'group_type' => 'group',
      'admin_label' => '',
      'plugin_id' => 'numeric',
      'operator' => 'empty',
      'value' => [
        'min' => '',
        'max' => '',
        'value' => '',
      ],
      'group' => '1',
      'exposed' => false,
      'expose' => [
        'operator_id' => '',
        'label' => '',
        'description' => '',
        'use_operator' => true,
        'operator' => '',
        'operator_limit_selection' => true,
        'operator_list' => [],
        'identifier' => '',
        'required' => true,
        'remember' => true,
        'multiple' => true,
        'remember_roles' => [
          'authenticated' => 'authenticated',
        ],
        'min_placeholder' => '',
        'max_placeholder' => '',
        'placeholder' => '',
      ],
      'is_grouped' => true,
      'group_info' => [
        'label' => '',
        'description' => '',
        'identifier' => '',
        'optional' => true,
        'widget' => 'select',
        'multiple' => true,
        'remember' => true,
        'default_group' => 'All',
        'default_group_multiple' => [],
        'group_items' => [
          '1' => [],
          '2' => [],
          '3' => [],
        ],
      ],
    ])
    ->save();

  $config->getEditable('media_bulk_upload.media_bulk_config.bulk_upload_documents')
    ->set('label', 'Bulk Upload Files')
    ->save();
  $config->getEditable('field.field.paragraph.masthead_simple.field_image')
    ->set('settings.file_extensions', 'png jpg jpeg')
    ->save();
  $config->getEditable('field.field.paragraph.card_horizontal.field_paragraph_card_image')
    ->set('settings.file_extensions', 'png jpg jpeg')
    ->save();
  $config->getEditable('field.field.paragraph.card_vertical.field_paragraph_card_image')
    ->set('settings.file_extensions', 'png jpg jpeg')
    ->save();
  $config->getEditable('field.field.paragraph.feature_image.field_paragraph_feature_image')
    ->set('settings.file_extensions', 'png jpg jpeg')
    ->save();
  $config->getEditable('field.field.paragraph.image_card.field_paragraph_card_image')
    ->set('settings.file_extensions', 'png jpg jpeg')
    ->save();
}

/**
 * Implements hook_uninstall().
 *
 * @ingroup ubc_science_shared_config
 */
function ubc_science_shared_config_uninstall() {
}
