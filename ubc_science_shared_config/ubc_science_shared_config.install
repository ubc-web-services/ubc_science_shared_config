<?php

/**
 * Implements hook_install().
 *
 * @ingroup ubc_science_shared_config
 */
function ubc_science_shared_config_install() {
  $config = \Drupal::service('config.factory');

  $config->getEditable('filter.format.filtered_text')
    ->set('filters.filter_html.settings.allowed_html', '<a name href id hreflang data-* target aria-* class=""> <blockquote cite class="blockquote-* p-* px-* py-*"> <br> <caption> <cite> <code> <dd> <dl> <drupal-entity data-entity-type data-entity-uuid data-entity-embed-display data-entity-embed-display-settings data-align data-caption data-embed-button alt title class=""> <drupal-media data-entity-type data-entity-uuid alt data-align data-caption data-view-mode title class=""> <dt> <em> <h2 id> <h3 id class=""> <h4 id class=""> <h5 id class=""> <h6 id class=""> <hr> <iframe longdesc name scrolling src title align height frameborder width> <img src srcset alt title data-*> <kbd> <li> <p class="text-* mt-* uppercase text-hug text-lead text-ubc-blue-sea text-sm font-serif text-grey-700 text-uppercase"> <samp> <strike> <strong> <sub> <sup> <svg viewBox aria-* class=""> <tbody> <td colspan class="w-* w-half w-one-third w-one-quarter w-one-fifth w-one-sixth"> <tfoot> <th> <thead> <tr> <u> <use xlink:href> <span class="text-* font-* text-uppercase text-lowercase font-semibold text-grey-700 text-white"> <table class="table-* table--plain table--condensed table--striped table--hover "> <s> <div aria-* hidden class="accordion accordion--* accordion__* align-* bg-* card card--* card__* clearfix col-md-* columns--* fa fa-* first-* flex flex-* md--flex-* group hover--* js-* min-* my-* object-* p-* row second-* text-* third-* ubc-card ubc-card__* ubc-card--* unit-* widget-* widget-column-options widget-columns-2 widget--md--grid widget-region-one widget-region-two widget-columns-3 widget-region-three widget-region-four widget-color-box widget-content first-child--mt-0 widget-accordion js-reveal__parent js-reveal__trigger accordion__trigger js-reveal__target accordion__content widget-card--horizontal widget-card first-image ubc-card__media ubc-card__content_wrapper first-content ubc-card__content first-footer ubc-card__actions card--one widget-card! card--three md--flex-1 second-image second-content second-footer third-image third-content third-footer widget-card!card--two!md--flex-grid"> <button data-* data-state class="widget-* unit-* text-* widget-expandcollapse"> <ul type class="list-* list-inline list-bordered list-checked list-inline list-bordered list-checked button-list button-list list-grid--two button-list list-grid--three button-list list-grid--four"> <ol start type class="list-* list-inline list-bordered list-checked list-inline list-bordered list-checked button-list button-list list-grid--two button-list list-grid--three button-list list-grid--four">')
    ->set('filters.editor_button_link_filter.settings.button_link_style_options', '|Default Style
      unit-button--light|Light Button
      unit-button--dark|Dark Button
      unit-button--simple|Simple Button
      unit-button--bordered|Bordered Button
      unit-button--subunit|Subunit Button
      unit-button--transparent|Transparent Button
      unit-button--capped|List Button')
    ->save();
  $config->getEditable('editor.editor.filtered_text')
    ->set('settings.plugins.stylescombo.styles', 'p.text-hug|Text Hug (remove top spacing)
      p.text-lead.text-ubc-blue-sea|Lead Text
      p.text-sm|Text: small
      p.font-serif|Serif font
      nspan.text-uppercase|Uppercase Text
      span.text-lowercase|Lowercase Text
      span.font-semibold|Semibold Text
      span.text-grey-700|Grey Text
      span.text-white|White Text
      p.text-grey-700.text-uppercase.text-sm|Attribution, Footnote Text
      ul.list-inline|List: inline
      ul.list-bordered|List: bordered
      ul.list-checked|List: checked
      ul.button-list|List: buttons
      ul.button-list.list-grid--two|List: 2 across
      ul.button-list.list-grid--three|List: 3 across
      ul.button-list.list-grid--four|List: 4 across
      ol.list-inline|Ordered List: inline
      ol.list-bordered|Ordered List: bordered
      ol.list-checked|Ordered List: checked
      ol.button-list|Ordered List: buttons
      ol.button-list.list-grid--two|Ordered List: 2 across
      nol.button-list.list-grid--three|Ordered List: 3 across
      ol.button-list.list-grid--four|Ordered List: 4 across
      table.table--plain|Table: plain
      table.table--condensed|Table: condensed
      table.table--striped|Table: striped
      table.table--hover|Table: stripe on hover
      td.w-half|Column width: 1/2
      td.w-one-third|Column width: 1/3
      td.w-one-quarter|Column width: 1/4
      td.w-one-fifth|Column width: 1/5
      td.w-one-sixth|Column width: 1/6')
    ->save();
  $config->getEditable('core.entity_form_display.media.file.default')
    ->clear(
      'hidden.field_media_file',
      'hidden.replace_file',
    )
    ->set('dependencies.module', [
      'file',
      'path',
    ])
    ->set('content.field_media_file', [
      'weight' => '2',
      'type' => 'file_generic',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [
        'progress_indicator' => 'throbber',
      ],
    ])
    ->set('content.replace_file', [
      'weight' => '3',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [],
    ])
    ->save();
  $config->getEditable('core.entity_form_display.media.image.default')
    ->clear(
      'hidden.name',
    )
    ->set('dependencies.module', [
      'svg_image',
      'path',
    ])
    ->set('content.name', [
      'weight' => '2',
      'type' => 'string_textfield',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [
        'size' => '60',
        'placeholder' => '',
      ],
    ])
    ->set('content.replace_file', [
      'weight' => '3',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [],
    ])
    ->save();
  $config->getEditable('core.entity_form_display.media.private_file.default')
    ->clear(
      'hidden.replace_file',
    )
    ->set('content.replace_file', [
      'weight' => '3',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [],
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.card_group.default')
    ->set('third_party_settings.field_group.group_optional_title.weight', '-1')
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.card_horizontal.default')
    ->set('content.field_paragraph_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->set('content.field_paragraph_card_title.weight', '-1')
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.card_vertical.default')
    ->set('content.field_paragraph_card_title.weight', '-1')
    ->set('content.field_paragraph_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.feature_image.default')
    ->set('dependencies.module', [
      'link',
      'maxlength',
      'svg_image',
    ])
    ->set('content.field_paragraph_feature_title.weight', '-1')
    ->set('content.field_paragraph_feature_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.icon_card.default')
    ->set('dependencies.module', [
      'link',
      'maxlength',
      'media_library',
    ])
    ->set('content.field_paragraph_icon_card_title.weight', '-1')
    ->set('content.field_paragraph_icon_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.image_card.default')
    ->set('dependencies.module', [
      'link',
      'maxlength',
      'media_library',
    ])
    ->set('content.field_paragraph_card_title.weight', '-1')
    ->set('content.field_paragraph_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  // update condtional title view
  $config->getEditable('views.view.content_conditional_title')
    ->set('display.default.display_options.filters.field_landing_masthead_target_id', [
      'id' => 'field_landing_masthead_target_id',
      'table' => 'node__field_landing_masthead',
      'field' => 'field_landing_masthead_target_id',
      'relationship' => 'none',
      'group_type' => 'group',
      'admin_label' => '',
      'plugin_id' => 'numeric',
      'operator' => 'empty',
      'value' => [
        'min' => '',
        'max' => '',
        'value' => '',
      ],
      'group' => '1',
      'exposed' => false,
      'expose' => [
        'operator_id' => '',
        'label' => '',
        'description' => '',
        'use_operator' => true,
        'operator' => '',
        'operator_limit_selection' => true,
        'operator_list' => [],
        'identifier' => '',
        'required' => true,
        'remember' => true,
        'multiple' => true,
        'remember_roles' => [
          'authenticated' => 'authenticated',
        ],
        'min_placeholder' => '',
        'max_placeholder' => '',
        'placeholder' => '',
      ],
      'is_grouped' => true,
      'group_info' => [
        'label' => '',
        'description' => '',
        'identifier' => '',
        'optional' => true,
        'widget' => 'select',
        'multiple' => true,
        'remember' => true,
        'default_group' => 'All',
        'default_group_multiple' => [],
        'group_items' => [
          '1' => [],
          '2' => [],
          '3' => [],
        ],
      ],
    ])
    ->save();

    $config->getEditable('media_bulk_upload.media_bulk_config.bulk_upload_documents')
      ->set('label', 'Bulk Upload Files')
      ->save();

}

/**
 * Implements hook_uninstall().
 *
 * @ingroup ubc_science_shared_config
 */
function ubc_science_shared_config_uninstall() {
}

/**
 * Update to update text format
 */
function ubc_science_shared_config_update_9001() {
  // create the new configuration (will also be enabled upon install)
  // now write to the new configuration
  $config = \Drupal::service('config.factory');

  $config->getEditable('filter.format.filtered_text')
    ->set('filters.filter_html.settings.allowed_html', '<a name href id hreflang data-* target aria-* class=""> <blockquote cite class="blockquote-* p-* px-* py-*"> <br> <caption> <cite> <code> <dd> <dl> <drupal-entity data-entity-type data-entity-uuid data-entity-embed-display data-entity-embed-display-settings data-align data-caption data-embed-button alt title class=""> <drupal-media data-entity-type data-entity-uuid alt data-align data-caption data-view-mode title class=""> <dt> <em> <h2 id> <h3 id class=""> <h4 id class=""> <h5 id class=""> <h6 id class=""> <hr> <iframe longdesc name scrolling src title align height frameborder width> <img src srcset alt title data-*> <kbd> <li> <p class="text-* mt-* uppercase text-hug text-lead text-ubc-blue-sea text-sm font-serif text-grey-700 text-uppercase"> <samp> <strike> <strong> <sub> <sup> <svg viewBox aria-* class=""> <tbody> <td colspan class="w-* w-half w-one-third w-one-quarter w-one-fifth w-one-sixth"> <tfoot> <th> <thead> <tr> <u> <use xlink:href> <span class="text-* font-* text-uppercase text-lowercase font-semibold text-grey-700 text-white"> <table class="table-* table--plain table--condensed table--striped table--hover "> <s> <div aria-* hidden class="accordion accordion--* accordion__* align-* bg-* card card--* card__* clearfix col-md-* columns--* fa fa-* first-* flex flex-* md--flex-* group hover--* js-* min-* my-* object-* p-* row second-* text-* third-* ubc-card ubc-card__* ubc-card--* unit-* widget-* widget-column-options widget-columns-2 widget--md--grid widget-region-one widget-region-two widget-columns-3 widget-region-three widget-region-four widget-color-box widget-content first-child--mt-0 widget-accordion js-reveal__parent js-reveal__trigger accordion__trigger js-reveal__target accordion__content widget-card--horizontal widget-card first-image ubc-card__media ubc-card__content_wrapper first-content ubc-card__content first-footer ubc-card__actions card--one widget-card! card--three md--flex-1 second-image second-content second-footer third-image third-content third-footer widget-card!card--two!md--flex-grid"> <button data-* data-state class="widget-* unit-* text-* widget-expandcollapse"> <ul type class="list-* list-inline list-bordered list-checked list-inline list-bordered list-checked button-list button-list list-grid--two button-list list-grid--three button-list list-grid--four"> <ol start type class="list-* list-inline list-bordered list-checked list-inline list-bordered list-checked button-list button-list list-grid--two button-list list-grid--three button-list list-grid--four">')
    ->set('filters.editor_button_link_filter.settings.button_link_style_options', '|Default Style
      unit-button--light|Light Button
      unit-button--dark|Dark Button
      unit-button--simple|Simple Button
      unit-button--bordered|Bordered Button
      unit-button--subunit|Subunit Button
      unit-button--transparent|Transparent Button
      unit-button--capped|List Button')
    ->save();
  $config->getEditable('editor.editor.filtered_text')
    ->set('settings.plugins.stylescombo.styles', 'p.text-hug|Text Hug (remove top spacing)
      p.text-lead.text-ubc-blue-sea|Lead Text
      p.text-sm|Text: small
      p.font-serif|Serif font
      nspan.text-uppercase|Uppercase Text
      span.text-lowercase|Lowercase Text
      span.font-semibold|Semibold Text
      span.text-grey-700|Grey Text
      span.text-white|White Text
      p.text-grey-700.text-uppercase.text-sm|Attribution, Footnote Text
      ul.list-inline|List: inline
      ul.list-bordered|List: bordered
      ul.list-checked|List: checked
      ul.button-list|List: buttons
      ul.button-list.list-grid--two|List: 2 across
      ul.button-list.list-grid--three|List: 3 across
      ul.button-list.list-grid--four|List: 4 across
      ol.list-inline|Ordered List: inline
      ol.list-bordered|Ordered List: bordered
      ol.list-checked|Ordered List: checked
      ol.button-list|Ordered List: buttons
      ol.button-list.list-grid--two|Ordered List: 2 across
      nol.button-list.list-grid--three|Ordered List: 3 across
      ol.button-list.list-grid--four|Ordered List: 4 across
      table.table--plain|Table: plain
      table.table--condensed|Table: condensed
      table.table--striped|Table: striped
      table.table--hover|Table: stripe on hover
      td.w-half|Column width: 1/2
      td.w-one-third|Column width: 1/3
      td.w-one-quarter|Column width: 1/4
      td.w-one-fifth|Column width: 1/5
      td.w-one-sixth|Column width: 1/6')
    ->save();
}

/**
 * Update to media entities
 */
function ubc_science_shared_config_update_9002() {
  // create the new configuration (will also be enabled upon install)
  // now write to the new configuration
  $config = \Drupal::service('config.factory');

  $config->getEditable('core.entity_form_display.media.file.default')
    ->clear(
      'hidden.field_media_file',
      'hidden.replace_file',
    )
    ->set('dependencies.module', [
      'file',
      'path',
    ])
    ->set('content.field_media_file', [
      'weight' => '2',
      'type' => 'file_generic',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [
        'progress_indicator' => 'throbber',
      ],
    ])
    ->set('content.replace_file', [
      'weight' => '3',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [],
    ])
    ->save();
  $config->getEditable('core.entity_form_display.media.image.default')
    ->clear(
      'hidden.name',
    )
    ->set('dependencies.module', [
      'svg_image',
      'path',
    ])
    ->set('content.name', [
      'weight' => '2',
      'type' => 'string_textfield',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [
        'size' => '60',
        'placeholder' => '',
      ],
    ])
    ->set('content.replace_file', [
      'weight' => '3',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [],
    ])
    ->save();
  $config->getEditable('core.entity_form_display.media.private_file.default')
    ->clear(
      'hidden.replace_file',
    )
    ->set('content.replace_file', [
      'weight' => '3',
      'region' => 'content',
      'third_party_settings' => [],
      'settings' => [],
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.card_horizontal.default')
    ->set('content.field_paragraph_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.card_vertical.default')
    ->set('content.field_paragraph_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.feature_image.default')
    ->set('dependencies.module', [
      'link',
      'maxlength',
      'svg_image',
    ])
    ->set('content.field_paragraph_feature_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.icon_card.default')
    ->set('dependencies.module', [
      'link',
      'maxlength',
      'media_library',
    ])
    ->set('content.field_paragraph_icon_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();
  $config->getEditable('core.entity_form_display.paragraph.image_card.default')
    ->set('dependencies.module', [
      'link',
      'maxlength',
      'media_library',
    ])
    ->set('content.field_paragraph_card_link.third_party_settings.maxlength', [
      'maxlength_js' => '100',
      'maxlength_js_label' => 'Content limited to @limit characters, remaining: <strong>@remaining</strong>',
    ])
    ->save();

  $config->getEditable('media_bulk_upload.media_bulk_config.bulk_upload_documents')
    ->set('label', 'Bulk Upload Files')
    ->save();
}